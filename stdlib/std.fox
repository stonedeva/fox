const SYS_read 0 end
const SYS_write 1 end
const SYS_open 2 end
const SYS_close 3 end
const SYS_execve 59 end
const SYS_exit 60 end

const stdin 0 end
const stdout 1 end
const stderr 2 end

const PUTD_BUFFER_CAP 20 end
const sizeof(int) 8 end

// puts - Writes a string to standard output
// : pointer, length
func puts int ptr in
    take len str in
	SYS_write stdout str len syscall
	drop
    end
end

// WARNING: This function is not finished!
// putd - Write a number to standard output
// : number, file descriptor
func putd int in
    memory putd_buffer PUTD_BUFFER_CAP end
    
    take num in
	0 while dup num 0 != do
	    putd_buffer dup + num 10 % set8
	    1 +
	end
	drop
    end
end

// fopen - Opens a file
// : pointer => file descriptor
func fopen ptr in
    peek path in
	SYS_open path 577 438 syscall
    end
    swap drop
end

// fclose - Closes a file
// : file descriptor
func fclose int in
    take fd in
	SYS_close fd 0 0 syscall
	drop
    end
end

// fputs - Write string to file
// : pointer, length, file descriptor
func fputs int ptr int in
    take len str fd in
	SYS_write fd str len 1 - syscall
	drop
    end
end

// eputs - Write string to standard error
// : pointer, length
func eputs int ptr in
    take len str in
	SYS_write stderr str len syscall
	drop
    end
end

// read - Read string from standard input
// : dest, length
func read ptr int in
    take dst len in
	SYS_read stdin dst len syscall
	drop
    end
end

// fread - Read string from file
// : file descriptor, dest, length
func fread int ptr int in
    take fd dst len in
	SYS_read fd dst len syscall
	drop
    end
end

// exit - Exit program
// : code
func exit int in
    take code in
	SYS_exit code 0 0 syscall
	drop
    end
end

// execve - Executes process
// : filename, argv, envp
func execve ptr ptr ptr in
    take filename argv envp in
	SYS_execve filename argv envp syscall
	drop
    end
end

// memcpy - Copys a region of memory into another
// : dest, source, size
func memcpy ptr ptr int in
    take dst src n in
	0 while dup n > do
	    src over + get8
	    dst over + set8
	    1 +
	end
	drop
    end
end

